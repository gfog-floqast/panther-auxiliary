# Copyright (C) 2020 Panther Labs Inc
#
# Panther Enterprise is licensed under the terms of a commercial license available from
# Panther Labs Inc ("Panther Commercial License") by contacting contact@runpanther.com.
# All use, distribution, and/or modification of this software, whether commercial or non-commercial,
# falls under the Panther Commercial License to the extent it is permitted.

AWSTemplateFormatVersion: 2010-09-09
Description: IAM roles for an account being scanned by Panther.

Mappings:
  # DO NOT EDIT PantherParameters section. Panther application relies on the exact format (including comments)
  # in order to replace the default values with an appropriate ones.
  PantherParameters:
    MasterAccountId:
      Value: '' # MasterAccountId
    MasterAccountRegion:
      Value: '' # MasterAccountRegion
    DeployCloudWatchEventSetup:
      Value: '' # DeployCloudWatchEventSetup
    DeployRemediation:
      Value: '' # DeployRemediation

Parameters:
  # Required parameters
  MasterAccountId:
    Type: String
    Description: DO NOT EDIT MANUALLY! Parameter is already populated with the appropriate value.
    Default: ''
  MasterAccountRegion:
    Type: String
    Description: DO NOT EDIT MANUALLY! Parameter is already populated with the appropriate value.
    Default: ''

  # Deployment toggles
  DeployCloudWatchEventSetup:
    Type: String
    Description: DO NOT EDIT MANUALLY! Parameter is already populated with the appropriate value.
    Default: ''
  DeployRemediation:
    Type: String
    Description: DO NOT EDIT MANUALLY! Parameter is already populated with the appropriate value.
    Default: ''

Conditions:
  # Condition to define if the template is generated by panther backend
  GeneratedTemplate: !Not [!Equals ['', !FindInMap [PantherParameters, MasterAccountId, Value]]]

  # Condition whether the generated template has CW events setup
  GeneratedCloudWatchEventSetup:
    !Equals [true, !FindInMap [PantherParameters, DeployCloudWatchEventSetup, Value]]
  # Condition whether the generated template has auto remediation setup
  GeneratedAutoRemediation: !Equals [true, !FindInMap [PantherParameters, DeployRemediation, Value]]

  # Condition whether the default template values configure CW events setup
  DefaultCloudWatchEventSetup: !Equals [true, !Ref DeployCloudWatchEventSetup]
  # Condition whether the default template values configure auto remediation
  DefaultAutoRemediation: !Equals [true, !Ref DeployRemediation]

  # Condition whether we should enable CWE
  EnableCloudWatchEvent: !Or
    - !And [Condition: GeneratedTemplate, Condition: GeneratedCloudWatchEventSetup]
    - !And [!Not [Condition: GeneratedTemplate], Condition: DefaultCloudWatchEventSetup]
  # Condition whether we should enable auto remediation
  EnableAutoRemediation: !Or
    - !And [Condition: GeneratedTemplate, Condition: GeneratedAutoRemediation]
    - !And [!Not [Condition: GeneratedTemplate], Condition: DefaultAutoRemediation]

Resources:
  AuditRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !If # DO NOT CHANGE! backend.yml CF depends on this name
        - GeneratedTemplate
        - !Sub
          - PantherAuditRole-${Mapping}
          - Mapping: !FindInMap [PantherParameters, MasterAccountRegion, Value]
        - !Sub PantherAuditRole-${MasterAccountRegion}
      Description: The Panther master account assumes this role for read-only security scanning
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !If
                - GeneratedTemplate
                - !Sub
                  - 'arn:${Partition}:iam::${Mapping}:root'
                  - Partition: !Ref AWS::Partition
                    Mapping: !FindInMap [PantherParameters, MasterAccountId, Value]
                - !Sub arn:${AWS::Partition}:iam::${MasterAccountId}:root
            Action: sts:AssumeRole
            Condition:
              Bool:
                aws:SecureTransport: true
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/SecurityAudit
      Policies:
        - PolicyName: CloudFormationStackDriftDetection
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DetectStackDrift
                  - cloudformation:DetectStackResourceDrift
                Resource: '*'
        - PolicyName: CloudFormationStackDriftDetectionSupplements
          # These permissions are not directly required for scanning, but are required by AWS in
          # order to perform CloudFormation Stack drift detection on the corresponding resource types
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sns:ListTagsForResource
                  - lambda:GetFunction
                  - apigateway:GET
                Resource: '*'
        - PolicyName: GetWAFACLs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - waf:GetRateBasedRule
                  - waf:GetRule
                  - waf:GetRuleGroup
                  - waf:GetWebACL
                  - waf-regional:GetRateBasedRule
                  - waf-regional:GetRule
                  - waf-regional:GetRuleGroup
                  - waf-regional:GetWebACL
                  - waf-regional:GetWebACLForResource
                Resource: '*'
        - PolicyName: GetTags
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:ListTagsOfResource
                  - kms:ListResourceTags
                  - waf:ListTagsForResource
                  - waf-regional:ListTagsForResource
                Resource: '*'
        - PolicyName: ListDescribeEKS
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - eks:ListClusters
                  - eks:ListFargateProfiles
                  - eks:ListNodegroups
                  - eks:DescribeCluster
                  - eks:DescribeFargateProfile
                  - eks:DescribeNodegroup
                Resource: '*'
      Tags:
        - Key: Application
          Value: Panther

  CloudFormationStackSetExecutionRole:
    Condition: EnableCloudWatchEvent
    Type: AWS::IAM::Role
    Properties:
      RoleName: !If # DO NOT CHANGE! backend.yml CF depends on this name
        - GeneratedTemplate
        - !Sub
          - PantherCloudFormationStackSetExecutionRole-${Mapping}
          - Mapping: !FindInMap [PantherParameters, MasterAccountRegion, Value]
        - !Sub PantherCloudFormationStackSetExecutionRole-${MasterAccountRegion}
      Description: CloudFormation assumes this role to execute a stack set
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !If
                - GeneratedTemplate
                - !Sub
                  - 'arn:${Partition}:iam::${Mapping}:root'
                  - Partition: !Ref AWS::Partition
                    Mapping: !FindInMap [PantherParameters, MasterAccountId, Value]
                - !Sub arn:${AWS::Partition}:iam::${MasterAccountId}:root
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ManageCloudFormationStack
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: cloudformation:*
                Resource: '*'
        - PolicyName: PantherSetupRealTimeEvents
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - events:*
                  - sns:*
                Resource: '*'
      Tags:
        - Key: Application
          Value: Panther

  RemediationRole:
    Condition: EnableAutoRemediation
    Type: AWS::IAM::Role
    Properties:
      RoleName: !If # DO NOT CHANGE! backend.yml CF depends on this name
        - GeneratedTemplate
        - !Sub
          - PantherRemediationRole-${Mapping}
          - Mapping: !FindInMap [PantherParameters, MasterAccountRegion, Value]
        - !Sub PantherRemediationRole-${MasterAccountRegion}
      Description: The Panther master account assumes this role for automatic remediation of policy violations
      MaxSessionDuration: 3600 # 1 hour
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !If
                - GeneratedTemplate
                - !Sub
                  - 'arn:${Partition}:iam::${Mapping}:root'
                  - Partition: !Ref AWS::Partition
                    Mapping: !FindInMap [PantherParameters, MasterAccountId, Value]
                - !Sub arn:${AWS::Partition}:iam::${MasterAccountId}:root
            Action: sts:AssumeRole
            Condition:
              Bool:
                aws:SecureTransport: true
      Policies:
        - PolicyName: AllowRemediativeActions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudtrail:CreateTrail
                  - cloudtrail:StartLogging
                  - cloudtrail:UpdateTrail
                  - dynamodb:UpdateTable
                  - ec2:CreateFlowLogs
                  - ec2:ModifyImageAttribute
                  - ec2:StopInstances
                  - ec2:TerminateInstances
                  - guardduty:CreateDetector
                  - iam:CreateAccessKey
                  - iam:CreateServiceLinkedRole
                  - iam:DeleteAccessKey
                  - iam:UpdateAccessKey
                  - iam:UpdateAccountPasswordPolicy
                  - kms:EnableKeyRotation
                  - logs:CreateLogDelivery
                  - rds:ModifyDBInstance
                  - rds:ModifyDBSnapshotAttribute
                  - s3:PutBucketAcl
                  - s3:PutBucketLogging
                  - s3:PutBucketPublicAccessBlock
                  - s3:PutBucketVersioning
                  - s3:PutEncryptionConfiguration
                Resource: '*'
      Tags:
        - Key: Application
          Value: Panther

Outputs:
  CloudFormationStackSetExecutionRoleArn:
    Condition: EnableCloudWatchEvent
    Description: The Arn of the CloudFormation StackSet Execution Role for configuring Panther infra.
    Value: !GetAtt CloudFormationStackSetExecutionRole.Arn
  CloudFormationStackSetExecutionRoleName:
    Condition: EnableCloudWatchEvent
    Description: The name of the CloudFormation StackSet Execution Role for configuring Panther infra.
    Value: !Ref CloudFormationStackSetExecutionRole
  PantherRemediationRoleArn:
    Condition: EnableAutoRemediation
    Description: The Arn of the Panther Auto Remediation IAM Role
    Value: !GetAtt RemediationRole.Arn
  PantherRemediationRoleName:
    Condition: EnableAutoRemediation
    Description: The name of the Panther Auto Remediation IAM Role
    Value: !Ref RemediationRole
